#+TITLE: Regional Module Code Documentation
#+DATE: August 10, 2015
#+AUTHOR: Oscar Alberto Quijano Xacur and Mohamad Elmasri
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:nil toc:nil todo:t |:t
#+OPTIONS:   H:4 num:t toc:3 p:t ^:nil
#+CREATOR: Emacs 24.4.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+latex_header: \usepackage{float}
#+latex_header: \floatstyle{ruled}
#+latex_header: \newfloat{code}{h}{txt}
#+latex_header: \floatname{code}{Code example}

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="css/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="css/styles/readtheorg/js/readtheorg.js"></script>


This document explains how to process data for the RMS questionnaire
using python code instead of the GUI. 

* Importing the Library
First import the library =rmquestionnaire= in =RMS\Libraries=, a code example is below.

#+latex: \begin{code}
#+BEGIN_SRC python 
  RMS_folder="/home/oscar/RMS/"
  import sys
  sys.path.append(RMS_folder+"Libraries")
  from rmquestionnaire import *
#+END_SRC
#+latex: \caption{Library import}\end{code}

* Importing 

In order to import data from a questionnaire the =questionnaire= class
should be used. Three arguments are needed when an object from this
class is defined: the excel file, the database file and the log folder.

#+latex: \begin{code}
#+BEGIN_SRC python
  excel_file="Regional_Survey_2015.xlsx"
  database_file= RMS_folder + "Database/UISProd.db"     # Concatenating the path of the main folder and the database subfolder.
  log_folder="/tmp/log/"            
  qobject=questionnaire(excel_file,database_file,log_folder)
#+END_SRC
#+latex: \caption{Library import}\end{code}

By initiating the  =qobject= as shown above, the class reads the file to know if the questionnaire is being imported for the first time
or if it is an edited questionnaire and what Database type to use
i.e. OBS, REP or EST. Also, =questionnaire= checks that the country
name used in the file exist the database, otherwise, an error is raised.

* Preprocessing

There is a =preprocessing= method. If the questionnaire is being
imported for the first time it reads the "Checking sheet" in the excel
file and prints if there is any *No*. 

If it is an edited questionnaire, it makes the following checks (in
the same order):

1. It checks that all the values being imported are valid.
2. It checks that the region names exist in the database, and that
   they are listed in the same order than in the original questionnaire.
3. It checks that the parts are smaller than the total (this means
   for example, the female figures are less than or equal to total figures).
4. It checks that the region values add up to the country value.

* Data extraction and comments
The =extract_data= method reads the values and enters them in the
database. It also writes the region names to the regions database if
an original questionnaire is being imported.
 
There are two different types of comments, the ones from excel that
every cell can have and the ones that are part of the questionnaire
and that are on the top of each table. The first ones we call them
cell comments and the second ones table comments. Cell comments can be
imported to the database with the  =extract_comments= method an table
comments with the =extract_table_comments= method.

#+latex: \begin{code}

#+BEGIN_SRC python
    qobject.preprocessing()
    qobject.extract_data()
    qobject.extract_comments()
    qobject.extract_table_comments()
#+END_SRC

#+latex: \caption{Preprocessing and data extraction}\end{code}

* Exporting the data

In order to export the data from the database to an excel file, the
=xlsxwriter= modules needs to be used in combination with the function
=export_var=. As shown in the following example, first the excel
workbook needs to be created and then =export_var= needs to be called
for each desired sheet.

#+latex: \begin{code}

  #+BEGIN_SRC python
    import xlsxwriter
    co_code = qobject.country_code
    co_name = qobject.country_name
    year = qobject.emco_year

    filename = "{0}_{1}.xlsx".format(co_name, 2012)

    wb = xlsxwriter.Workbook(filename)

    export_var('Administrative divisions', wb, co_code, year, var_type = "sheet")
    export_var('Pupils', wb, co_code, year, var_type = "sheet")
    export_var('Teachers ISCED 1', wb, co_code, year, var_type = "sheet")
    export_var('Teachers ISCED 2', wb, co_code, year, var_type = "sheet")
    export_var('Teachers ISCED 3', wb, co_code, year, var_type = "sheet")
    export_var('Teachers ISCED 23', wb, co_code, year, var_type = "sheet")
    wb.close()
  #+END_SRC

#+latex: \caption{Exporting from excel}\end{code}

#  LocalWords:  RMS Quijano Xacur Mohamad Elmasri num pri tex toc txt
#  LocalWords:  timestamp todo noexport usepackage floatstyle SRC sys
#  LocalWords:  newfloat floatname rmquestionnaire xlsx qobject emco
#  LocalWords:  xlsxwriter filename wb gui
#  LocalWords:  ISCED
